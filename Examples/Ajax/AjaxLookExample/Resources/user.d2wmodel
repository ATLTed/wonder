{
  "rules" = (
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "lhs" = {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "propertyKey"; "selectorName" = "isEqualTo"; "value" = "ajaxNotificationCenter"; }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "componentName"; "value" = "AjaxNotificationCenter"; }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo"; "value" = "edit"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo"; "value" = "javaEnum"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "keyWhenRelationship"; "value" = "name"; }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "This rule inserts the AjaxNotificationCenter component into the page if you are using ERNeutralLook. The AjaxNotificationCenter can go anywhere on the page really, as long as it appears before the first AjaxObservingSwitch component.  Otherwise, the switch will not be able to find and update the notification center.  In this case, we are using the ERDirectToWeb inspect page template which does not have above/below displayPropertyKeys components.  So, the rule is disabled, and the ajaxNotificationCenter key is inserted at the top of the displayPropertyKeys array instead."; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "RuleIsDisabled"; "selectorName" = "isEqual"; "value" = "YES"; }, {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo"; "value" = "edit"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "entity.name"; "selectorName" = "isEqualTo"; "value" = "Address"; }); }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "aboveDisplayPropertyKeys"; "value" = ("ajaxNotificationCenter"); }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "documentation" = "In this small example, all the enum popup menus are wrapped in an AjaxObservingSwitch. Whenever the value changes on one of the popups, it fires an update on the container of the AjaxNotificationCenter component and that in turn updates the appropriate properties. The ANC determines which fields to  update via the PropertyChangedDelegate."; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo"; "value" = "edit"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo"; "value" = "javaEnum"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "componentName"; "value" = "AjaxObservingSwitch"; }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo"; "value" = "edit"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo"; "value" = "javaEnum"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "customComponentName"; "value" = "ERD2WEditToOneRelationship"; }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo"; "value" = "edit"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "entity.name"; "selectorName" = "isEqualTo"; "value" = "Address"; }); }; "rhs" = {"class" = "ERDDelayedObjectCreationAssignment"; "keyPath" = "propertyChangedDelegate"; "value" = "com.ajaxlook.delegates.AddressPropertyChangeDelegate"; }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo"; "value" = "edit"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo"; "value" = "javaEnum"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "propertyKey"; "selectorName" = "isEqualTo"; "value" = "city"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "restrictedChoiceKey"; "value" = "object.cityChoices"; }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo"; "value" = "edit"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo"; "value" = "javaEnum"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "propertyKey"; "selectorName" = "isEqualTo"; "value" = "state"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "restrictedChoiceKey"; "value" = "object.stateChoices"; }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo"; "value" = "edit"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "smartAttribute.prototype.name"; "selectorName" = "isEqualTo"; "value" = "javaEnum"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "propertyKey"; "selectorName" = "isEqualTo"; "value" = "nation"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "restrictedChoiceKey"; "value" = "object.nationChoices"; }; }, 
    {"author" = "100"; "class" = "com.webobjects.directtoweb.Rule"; "lhs" = {"class" = "com.webobjects.eocontrol.EOAndQualifier"; "qualifiers" = ({"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "task"; "selectorName" = "isEqualTo"; "value" = "edit"; }, {"class" = "com.webobjects.eocontrol.EOKeyValueQualifier"; "key" = "entity.name"; "selectorName" = "isEqualTo"; "value" = "Address"; }); }; "rhs" = {"class" = "com.webobjects.directtoweb.Assignment"; "keyPath" = "displayPropertyKeys"; "value" = ("ajaxNotificationCenter", "nation", "state", "city", "zipCode", "streetAddress"); }; }
  ); 
}